// Travels/TravelCard/TravelCard.module.scss
@use "@/styles/global" as *;

.card {
  height: 100%;
  background: #fff;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  display: flex;
  flex-direction: column;
  cursor: pointer;

  container-type: size;
}


.inner {
  display: flex;
  height: 100%;
  background: white;
  border-radius: 12px;

  .grid & {
    @include media-min(xl) {

      // Высокая карточка
      @container (min-height: 301px) {
        flex-direction: column;

        .imageWrapper {
          width: 100%;
          height: 60%;
        }
      }

      // Широкая карточка
      @container (min-width: 494px) {
        flex-direction: row;

        .imageWrapper {
          width: 65%;
          height: 100%;
        }
      }
    }

    @include media-between(lg, xl) {

      // Обычная карточка
      @container (max-height: 351px) {
        flex-direction: column;

        .imageWrapper {
          width: 100%;
          height: 50%;
        }
      }

      // Высокая карточка
      @container (min-height: 351px) {
        flex-direction: column;

        .imageWrapper {
          width: 100%;
          height: 70%;
        }
      }

      // Широкая карточка
      @container (min-width: 700px) {
        flex-direction: row;

        .imageWrapper {
          width: 65%;
          height: 100%;
        }
      }
    }

    @include media-between(md, lg) {

      // Обычная карточка
      @container (max-height: 301px) {
        flex-direction: column;

        .imageWrapper {
          width: 100%;
          height: 40%;
        }
      }

      // Высокая карточка
      @container (min-height: 301px) {
        flex-direction: column;

        .imageWrapper {
          width: 100%;
          height: 60%;
        }
      }

      // Широкая карточка
      @container (min-width: 570px) {
        flex-direction: row;

        .imageWrapper {
          width: 55%;
          height: 100%;
        }
      }
    }

    @include media-between(sm, md) {

      // Обычная карточка
      @container (max-width: 430px) {
        flex-direction: column;

        .imageWrapper {
          width: 100%;
          height: 50%;
        }
      }

      // Широкая карточка
      @container (min-width: 431px) {
        flex-direction: row;

        .imageWrapper {
          width: 60%;
          height: 100%;
        }
      }
    }

    @include media-between(xs, sm) {

      // Обычная карточка
      @container (max-width: 430px) {
        flex-direction: column;

        .imageWrapper {
          width: 100%;
          height: 40%;
        }
      }

      // Широкая карточка
      @container (min-width: 431px) {
        flex-direction: row;

        .imageWrapper {
          width: 50%;
          height: 100%;
        }
      }
    }
  }

  .list & {
    display: flex;
  }
}

.imageWrapper {
  position: relative;
  overflow: hidden;
  width: 50%;
  flex-shrink: 0;
  border-radius: 12px;

  [data-mode="modal"] & {
    width: auto;
    flex-grow: 1;
    flex-shrink: unset;
  }

  .image {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;

    will-change: transform;
    backface-visibility: hidden;
  }

  @media (width <=500px) {
    order: var(--image-order, 0);
  }
}

.info {
  padding: 16px 12px;

  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 4px;

  color: black;

  h3 {
    margin-bottom: 6px;

    [data-mode="modal"] & {
      font-size: 42px;
    }
  }

  [data-mode="modal"] & {
    gap: 8px;
  }
}

.infoItem {
  display: flex;
  align-items: center;
  gap: 7px;

  [data-mode="modal"] & {
    font-size: 18px;
  }
}

.infoDate {
  white-space: nowrap;

  @media (width <=500px) {
    white-space: normal;
  }
}

.actions {
  display: flex;
  gap: 10px;
  margin-top: 20px;
}

.actions button {
  display: flex;
  align-items: center;
  justify-content: center;

  margin: 0;
  padding: 15px 30px;

  font-family: var(--font-body);
  font-size: 20px;
  font-weight: 700;

  text-decoration: none;

  border: none;
  border-radius: 12px;
  outline: none;

  cursor: pointer;

  &.actionsEdit {
    color: black;
    background-color: var(--blue-soft);

    &:hover {
      background-color: var(--blue-light);
    }

    &:active {
      background-color: var(--blue-dark);
    }
  }

  &.actionsRemove {
    color: black;
    background-color: var(--red-soft);

    &:hover {
      background-color: var(--red-light);
    }

    &:active {
      background-color: var(--red-dark);
    }
  }
}